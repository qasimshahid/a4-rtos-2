# Compiler we are using
CC = gcc
FLAGS = -w

# Directories
SRC_DIR = .
OUT_DIR = .

# Files
SRC_FILE = stopwatch.c
BBBIO_FILE = bbbio.c
OUT_FILE_REAL = stopwatch

# Default target (real means we are compiling for BeagleBone). Do not use this on your local machine. This creates the executable we will run on the BeagleBone.
all: real

# Target for compiling for BeagleBone -- ONLY USE THIS WHEN COMPILING ON BEAGLEBONE
# The executable generated by this will not work on your local machine. You can try, but you probably don't have GPIOs which will cause this code to fail since it uses our GPIO library to write to the GPIO filesystem. 
# You likely don't have this GPIO filesystem / structure on your x86 host machine / whatever else your main computer is.
# You should take all the files in the /src directory, transfer them over to the BeagleBone using SFTP or whatever, and then use make real / make all in that directory so that we compile on the BeagleBone.
real: $(SRC_DIR)/$(SRC_FILE) $(SRC_DIR)/$(BBBIO_FILE)
	@echo "Compiling for BeagleBone..."
	@$(CC) $(FLAGS) -o $(OUT_DIR)/$(OUT_FILE_REAL) $(SRC_DIR)/$(SRC_FILE) $(SRC_DIR)/$(BBBIO_FILE) -pthread
	@echo "Complete."

# Clean executables
clean:
	@rm -f $(OUT_DIR)/$(OUT_FILE_REAL)
	@echo "Cleanup completed."